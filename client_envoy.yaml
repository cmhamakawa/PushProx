admin:
  access_log_path: /dev/stdout
  address:
    socket_address: { address: 0.0.0.0, port_value: 9999 }

static_resources:
  listeners:
    - name: client_listener
      address:
        socket_address: { address: 0.0.0.0, port_value: 80 }
      filter_chains:
      - filters:
        - name: envoy.filters.network.tcp_proxy
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
            stat_prefix: passthrough
            cluster: client_cluster
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
            common_tls_context:
              tls_params:
                tls_minimum_protocol_version: TLSv1_2
              tls_certificates:
                - certificate_chain: { filename: "/etc/kubernetes/secrets/apiserver.pem" }
                  private_key: { filename: "/etc/kubernetes/secrets/apiserver-key.pem" }
  clusters:
    - name: client_cluster
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: client_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: ${API_SERVER_IP}
                      port_value: 10001
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          common_tls_context:
            tls_certificates:
            - certificate_chain:
                filename: "/prometheus-certs/client.pem"
              private_key:
                filename: "/prometheus-certs/client-key.pem"
            validation_context:
              trusted_ca:
                filename: "/etc/kubernetes/secrets/ca.pem"
